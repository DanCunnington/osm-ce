import os,json, timeit
from shapely.geometry import Point
from shapely.geometry.polygon import Polygon

# for given polygon, identify cheaply, line strings that are inside the polygon
polygon = '{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[-1.394115746808254,51.03100047151937],[-1.3937577573315207,51.032010468901525],[-1.3936517594158557,51.03219546826527],[-1.3934487806945042,51.034226462885286],[-1.3933177878474459,51.03482546042168],[-1.3927647979624662,51.03585145833925],[-1.3921818071691408,51.03680445659417],[-1.3914198271799723,51.038941453316745],[-1.3912918294058538,51.0392044531504],[-1.39088983336527,51.03957145206498],[-1.3905488365187204,51.039779450540415],[-1.3892658436020577,51.040387448218524],[-1.3862978513053827,51.04136144814343],[-1.3854948529791422,51.041550447949945],[-1.3791898627908543,51.042239443534626],[-1.3741418721507945,51.04342944349577],[-1.3691628913033227,51.04531743913297],[-1.3684268938175976,51.04559343878091],[-1.3654389023842282,51.04643943684213],[-1.3648909043944648,51.04664043640667],[-1.3620179200739155,51.04815043255812],[-1.3609889251179443,51.04853443052291],[-1.3541939477585982,51.05096142690078],[-1.3537229491733735,51.051126426779085],[-1.3518159524919895,51.051470426156385],[-1.3517289529350627,51.05149042587004],[-1.3505919620280635,51.05230442315657],[-1.3499079656223372,51.05275642310492],[-1.3475529781484181,51.053948419921724],[-1.3470379824177403,51.05424441797254],[-1.346063988326948,51.05502641819319],[-1.3380050389782665,51.05995440617769],[-1.337310042370734,51.06040440631385],[-1.3386880779779322,51.06391139820989],[-1.3386620892458816,51.0640533880551],[-1.3355151267875818,51.06863438644947],[-1.3350731318907512,51.06925438621067],[-1.3344891375663104,51.069850385211375],[-1.334384138404011,51.0699203849229],[-1.3332261429657366,51.07037138389989],[-1.3325501440974625,51.07049938377252],[-1.3313988587798449,51.07028161393385],[-1.330269862080705,51.06985361399125],[-1.3309061399420272,51.070091384726595],[-1.3307711405645164,51.07014238450428],[-1.320962165412072,51.072616379070126],[-1.3210171677585494,51.072685377265095],[-1.3202908344918036,51.0723986216097],[-1.3202358368382896,51.0723296198047],[-1.3300448616855778,51.06985561437068],[-1.3301798623080625,51.069804614148346],[-1.3309961401693924,51.07014038488372],[-1.332125143470308,51.07056838494109],[-1.3318238581526707,51.07021261510242],[-1.3336578638460583,51.06963361395206],[-1.3337628646837523,51.06956361366359],[-1.3353008842922847,51.067608609393346],[-1.3379359130034607,51.06376661082013],[-1.3365919595963716,51.06014059266322],[-1.3365839598783118,51.060117592561625],[-1.3453380139215174,51.05473958068257],[-1.3463120198306222,51.05395758090326],[-1.348973035547552,51.052563576112554],[-1.3491820366258824,51.052469575770964],[-1.3505510469112747,51.05145957340136],[-1.3506640477586078,51.05136157332207],[-1.3527370523963524,51.05091257220313],[-1.3529970530746707,51.050839572096905],[-1.3578440702798358,51.049076568707314],[-1.3602630771298012,51.04824756835321],[-1.3612920821738008,51.047863566318],[-1.3621440859682716,51.04748856546178],[-1.3637300958591563,51.04655056292007],[-1.3641650978530933,51.04635356246956],[-1.3671131053379182,51.04548456179284],[-1.3677011084298478,51.04530656009538],[-1.3727421271727231,51.043353556651546],[-1.3734161300964174,51.043142555380626],[-1.3784641394562047,51.0419525553418],[-1.3839361482756949,51.04136755110417],[-1.3847691492678698,51.041263550926544],[-1.3885401586448072,51.04010055065799],[-1.389823165728088,51.03949254833618],[-1.3904751716400956,51.03902354609695],[-1.3905661728409058,51.0389175457262],[-1.3911441871076353,51.037331543878715],[-1.3914561950773423,51.03651754228258],[-1.3920392042839107,51.03556454053751],[-1.3925922143988188,51.03453853845517],[-1.3928732398015642,51.03217853152687],[-1.392926242830145,51.031908530611716],[-1.3933772549339416,51.030756527524815],[-1.393390255437624,51.03071352735768],[-1.394115746808254,51.03100047151937]]]}}'
data = json.loads(polygon)

coordinates = data["geometry"]["coordinates"][0]

coordinate_list = []
for coordinate_pair in coordinates:
  coordinate_list.append((coordinate_pair[0], coordinate_pair[1]))

polygon = Polygon(coordinate_list)

#road segments found
rsf = []

# load in geojson curves
with open('../store/curvature_combined.json') as f:
  contents = json.load(f)

  #for every object, (road segment) check if first point is in polygon
  start_time = timeit.default_timer()
  for road_segment in contents:
    #road segment coordinates
    rscs = road_segment["features"][0]["geometry"]["coordinates"]
    first_point = rscs[0]
    point = Point(first_point[0], first_point[1])
    if polygon.contains(point):
      #check other points
      contained = True

      for rsc in rscs:
        nextPoint = Point(rsc[0], rsc[1])
        if not polygon.contains(nextPoint):
          contained = False
          break
      if contained:
        rsf.append(road_segment)

  elapsed = timeit.default_timer() - start_time
  print 'Finished, road segments found:'
  print rsf
  print 'This took the following number of seconds to execute:'
  print elapsed
